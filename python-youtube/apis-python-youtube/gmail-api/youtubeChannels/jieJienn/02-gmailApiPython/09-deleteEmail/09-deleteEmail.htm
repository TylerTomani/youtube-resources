<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>jiejenn-09_deleteEmail-</title>
    <link rel="stylesheet" href="../../../../../../../../css/colors.css" />
    <link rel="stylesheet" href="../../../../../../../../css/font-sizes.css" />
    <link rel="stylesheet" href="../../../../../../../css/resource-header-temp.css" />
    <link rel="stylesheet" href="../../../../../../../css/tutorial-temp-v2.css" />
    <link rel="stylesheet" href="../../../../../../../../css/copy-code.css">
    <link rel="stylesheet" href="../../../../../../../../css/imgAnimate-v2.css">
    <script src="../../../../../../../js/letterFocus-tutorial.js" defer></script>
    <script src="../../../../../../../../js/copy-code.js" defer></script>
    <script src="../../../../../../../js/dropPartStepFocus-v2.js" defer></script>
    <script src="../../../../../../../js/loadpageNewTab.js" defer></script>
    <script type="module" src="../../../../../../../js/autofocusLoad.js" defer></script>
    <script type="module" src="../../../../../../../js/play-enlarge-video.js" defer></script>
    <script type="module" src="../../../../../../../js/img-enlarge-v1.js" defer></script>
    <script type="module" src="../../../../../../../js/addRemoveTabs-v1.js" defer></script>
</head>
<body>
    <header>
        <div class="home-link">
            <a id="homeLink" tabindex="1" href="../../jie-jenn-gmail.htm">(home)gmail-api-jieJenn</a>
        </div>
        <div class="title-container">
            <h1>Jie Jenn - gmail api playlist</h1>
            <h2>09_Create a Python Program To Delete Gmail Emails (Source Code In Description)</h2>
        </div>
        <div class="page-logo">
            <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT3n2xRaDhY_cplhUTNhg_xMjATAO4sSAfGjNSMHInRl8wFIGJO93EYopD0ZMdDPuMmrHk&usqp=CAU">
            <a id="tutorialLink" tabindex="1" target="_blank" href="https://www.youtube.com/watch?v=WcESL1JLg_E&list=PL3JVwFmb_BnSHlyy3gItOar_Y8w45mbJx&index=10">tutorial</a>
        </div>
    </header>
    <main>
        <div class="parts-container">
            <!-- Part 1 - Create venv & install flask  -->
            <div class="part">
                <a id="part01" tabindex="1" href="#" class="dropPart"><h3>Part 1 - Start Script, import function from extenal script </h3></a>
                <div class="steps-container ">
                    <!-- 01-01 -->
                    <div class="step-col">
                        <div tabindex="1" class="step-txt">
                            <h4>01</h4>
                            <div class="code-container">
                                <pre tabindex="1" class="copy-code">
pip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlib</pre>
                            </div>
                            <div class="code-container">
                                <pre tabindex="1" class="copy-code">
https://mail.google.com/</pre>
                            </div>                            
                            <p>
                                Do this with tstudystuff instead, review getting started <a target="_blank" href="../../01-gettingStarted/01-gettingStarted.htm">01-gettingStarted</a>
                                and <a target="_blank" href="../../../codeTops/00-howGetStartGmailAPI/01-howGetStartGmailAPI/01-howGetStartGmailAPI.htm">codeTops - getting start</a>
                            </p>
                        </div>
                        <div class="step-img">
                            <!-- <img src="imagesVideos/"> -->
                        </div>
                    </div>
                    <!-- 01-02 -->
                    <div class="step">
                        <div tabindex="1" class="step-txt">
                            <h4>02</h4>
                            <p>
                                This is my simplified <code>create_service</code> script
                            </p>
                            <div class="code-container">
                                <pre tabindex="1" class="copy-code">
import os.path

from google.auth.transport.requests import Request
from google.oauth2.credentials import Credentials
from google_auth_oauthlib.flow import InstalledAppFlow
from googleapiclient.discovery import build
from googleapiclient.errors import HttpError

def create_service(client_secret,api_name,api_version,*scopes):
    CLIENT_SECRET = client_secret
    API_NAME = api_name
    API_VERSION = api_version
    SCOPES = [scope for scope in scopes[0]]

    creds = None
    if os.path.exists('token.json'):
        creds = Credentials.from_authorized_user_file('token.json',SCOPES)
    if not creds or not creds.valid:
        if creds and creds.expired and creds.refresh_token:
            creds.refresh(Request())
        else:
            flow = InstalledAppFlow.from_client_secrets_file('credentials.json',SCOPES)
            creds = flow.run_local_server(port=0)
        with open ('token.json','w') as token:
            token.write(creds.to_json())
    try:
        service = build(API_NAME,API_VERSION,credentials=creds)
        return service
    except HttpError as e:
        print('error', e)
                                </pre>
                            </div>
                        </div>
                        <div class="step-img">
                            <img class="sm-enlarge" src="../../../../gmail.png">
                        </div>
                    </div>   
                </div>
            </div>
            <!-- Part 2 - Search for the emails -->
            <div class="part">
                <a id="" tabindex="1" href="#" class="dropPart"><h3>Part 2 - Search for the emails </h3></a>
                <div class="steps-container ">
                    <!-- 02-01 -->
                    <div class="step-col">
                        <div tabindex="1" class="step-txt">
                            <h4>01</h4>
                            <p>
                                Use the following function to search for the emails, review 
                                <a target="_blank" href="../../../codeTops/00-howGetStartGmailAPI/01-howGetStartGmailAPI/01-howGetStartGmailAPI.htm">codeTops 01-getStart - part 7 and 8</a>
                                for better understanding
                            </p>
                            <p>
                                <code class="m">Labels</code> allows us to search for things such as <code>'Subject'</code>
                                or <code>'Sender'</code> / 'from'
                            </p>
                            <p class="r">
                                This tutorial is sloppy, chat gpt provided the code below which 
                            </p>
                            <div class="code-container">
                                <pre tabindex="1" class="copy-code">
def search_emails(query,<span class="m">Labels</span>=None):
    next_page_token = None
    email_messages = []
    
    while True:
        message_response = service.users().messages().list(
            userId='me',
            labelIds=Labels,
            includeSpamTrash=False,
            q=query,
            maxResults=500,
            pageToken=next_page_token
        ).execute()
        
        email_messages.extend(message_response.get('messages', []))
        next_page_token = message_response.get('nextPageToken')
        
        if not next_page_token:
            break

    return email_messages
</pre>
                            </div>                            
                        </div>
                        <div class="img-2-container">
                            <div class="step-img">
                                <img src="imagesVideos/02-01a.png">
                            </div>
                            <div class="step-img">
                                <img src="imagesVideos/02-01b.png">
                            </div>
                        </div>
                    </div>
                    <!-- 02-02 -->
                    <div class="step">
                        <div tabindex="1" class="step-txt">
                            <h4>02</h4>
                            <p>
                                Now insert the query, <code>subject: delete this</code> and labels.
                            </p>
                            <p>
                                This will return the two emails seen in the pictures above "delete this 1 and delete this 2"
                                and their key value pairs including the ids
                            </p>
                            <div class="code-container">
                                <pre tabindex="1" class="copy-code">
from google_service import create_service

CLIENT_SECRET = 'credentials.json'
API_NAME = 'gmail'
API_VERSION = 'v1'
SCOPES = ['https://mail.google.com/']

service = create_service(CLIENT_SECRET,API_NAME,API_VERSION,SCOPES)


def search_email(query, Labels=None):
    next_page_token = None
    email_messages = []
    
    while True:
        message_response = service.users().messages().list(
            userId='me',
            labelIds=Labels,
            includeSpamTrash=False,
            q=query,
            maxResults=500,
            pageToken=next_page_token
        ).execute()
        
        email_messages.extend(message_response.get('messages', []))
        next_page_token = message_response.get('nextPageToken')
        
        if not next_page_token:
            break

    return email_messages


query_string = 'subject:delete this'
email_results = search_email(query_string)
print(email_results)
    </pre>
                            </div>
                            
                        </div>
                        <div class="step-img">
                            <img class="lg-enlarge" src="imagesVideos/02-02.png">
                        </div>
                    </div>
                    <!-- 02-03 -->
                    <div class="step">
                        <div tabindex="1" class="step-txt">
                            <h4>03</h4>
                            <p>
                                To delete the email, loop through the results and use the <code class="m">id</code>
                                value.
                            </p>
                            <div class="code-container">
                                <pre tabindex="1" class="copy-code">
query_string = 'subject: delete this'
email_results = search_email(query_string)

for email in email_results:
    service.users().messages().trash(
        userId='me',
        id=email[<span class="m">'id'</span>]
    ).execute()</pre>
                            </div>
                            
                        </div>
                        <div class="step-img">
                            <img src="imagesVideos/">
                        </div>
                    </div>
                </div>

            </div>
            <!-- Part 3 full code -->
            <div class="part">
                <a id="" tabindex="1" href="#" class="dropPart">
                    <h3>Part 3 - Full code - scrips</h3>
                </a>
                <div class="steps-container show">
                    <div class="step-col">
                        <div tabindex="1" class="step-txt">
                          <p>
                            Here is the full code for each script
                          </p>  
                        <div class="code-container">
                                <pre tabindex="1" class="copy-code">
pip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlib</pre>
                            </div>
                            <div class="code-container">
                                <pre tabindex="1" class="copy-code">
https://mail.google.com/</pre>
                            </div>                            
                        </div>
                        <div class="img-2-container">
                            <div class="code-container">
                                <pre tabindex="1" class="copy-code">
from google_service import create_service

CLIENT_SECRET = 'credentials.json'
API_NAME = 'gmail'
API_VERSION = 'v1'
SCOPES = ['https://mail.google.com/']

service = create_service(CLIENT_SECRET,API_NAME,API_VERSION,SCOPES)

def search_email(query, Labels=None):
    next_page_token = None
    email_messages = []
    
    while True:
        message_response = service.users().messages().list(
            userId='me',
            labelIds=Labels,
            includeSpamTrash=False,
            q=query,
            maxResults=500,
            pageToken=next_page_token
        ).execute()
        
        email_messages.extend(message_response.get('messages', []))
        next_page_token = message_response.get('nextPageToken')
        
        if not next_page_token:
            break

    return email_messages

query_string = 'subject:delete this'
email_results = search_email(query_string)

for email in email_results:
    service.users().messages().trash(
        userId='me',
        id=email['id']
    ).execute()
    
                                </pre>
                            </div>                        
                            <div class="code-container">
                                <pre tabindex="1" class="copy-code">
import os.path

from google.auth.transport.requests import Request
from google.oauth2.credentials import Credentials
from google_auth_oauthlib.flow import InstalledAppFlow
from googleapiclient.discovery import build
from googleapiclient.errors import HttpError

def create_service(client_secret,api_name,api_version,*scopes):
    CLIENT_SECRET = client_secret
    API_NAME = api_name
    API_VERSION = api_version
    SCOPES = [scope for scope in scopes[0]]

    creds = None
    if os.path.exists('token.json'):
        creds = Credentials.from_authorized_user_file('token.json',SCOPES)
    if not creds or not creds.valid:
        if creds and creds.expired and creds.refresh_token:
            creds.refresh(Request())
        else:
            flow = InstalledAppFlow.from_client_secrets_file('credentials.json',SCOPES)
            creds = flow.run_local_server(port=0)
        with open ('token.json','w') as token:
            token.write(creds.to_json())
    try:
        service = build(API_NAME,API_VERSION,credentials=creds)
        return service
    except HttpError as e:
        print('error', e)
                                
                                </pre>
                            </div>
                            
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>

</body>
</html>